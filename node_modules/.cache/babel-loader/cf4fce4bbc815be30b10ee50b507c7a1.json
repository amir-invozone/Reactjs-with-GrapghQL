{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/amir-invozone/training/react/react-with-graphql/src/Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst GET_SINGLE_USER = gql`\n  query($userid: Int!) {\n    user(id: $userid) {\n      id\n      name\n      age\n      jobs {\n        company\n        duration\n      }\n    }\n  }\n`;\nconst GET_USERS = gql`\n  {\n    users {\n      id\n      name\n      age\n      jobs {\n        company\n        duration\n      }\n    }\n  }\n`;\n\nfunction Users(user) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = user.id !== undefined && user.id !== '' ? useQuery(GET_SINGLE_USER, {\n    variables: {\n      userid: parseInt(user.id, 10)\n    }\n  }) : useQuery(GET_USERS);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"5\",\n        children: [\"Error :(\", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (data.user) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.user.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.user.jobs.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.user.jobs.duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, data.user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (data.users) {\n    const list = [];\n    data.users.forEach(u => {\n      list.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: u.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: u.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: u.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: u.jobs.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: u.jobs.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this));\n    });\n    return list;\n  }\n\n  if (!data.user && !data.users) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"5\",\n        children: \"No user found for this ID \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Users, \"mn4J3+ExfyLz+EHcTadVPXTeWq4=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/amir-invozone/training/react/react-with-graphql/src/Users.js"],"names":["React","useQuery","gql","GET_SINGLE_USER","GET_USERS","Users","user","loading","error","data","id","undefined","variables","userid","parseInt","message","name","age","jobs","company","duration","users","list","forEach","u","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst GET_SINGLE_USER = gql`\n  query($userid: Int!) {\n    user(id: $userid) {\n      id\n      name\n      age\n      jobs {\n        company\n        duration\n      }\n    }\n  }\n`;\nconst GET_USERS = gql`\n  {\n    users {\n      id\n      name\n      age\n      jobs {\n        company\n        duration\n      }\n    }\n  }\n`;\nfunction Users(user) {\n  const { loading, error, data } =\n    user.id !== undefined && user.id !== ''\n      ? useQuery(GET_SINGLE_USER, { variables: { userid: parseInt(user.id, 10) } })\n      : useQuery(GET_USERS);\n  if (loading) {\n    return (\n      <tr>\n        <td>Loading...</td>\n      </tr>\n    );\n  }\n  if (error) {\n    return (\n      <tr>\n        <td colSpan=\"5\">\n          Error :(\n          {error.message}\n        </td>\n      </tr>\n    );\n  }\n  if (data.user) {\n    return (\n      <tr key={data.user.id}>\n        <td>{data.user.id}</td>\n        <td>{data.user.name}</td>\n        <td>{data.user.age}</td>\n        <td>{data.user.jobs.company}</td>\n        <td>{data.user.jobs.duration}</td>\n      </tr>\n    );\n  }\n  if (data.users) {\n    const list = [];\n    data.users.forEach((u) => {\n      list.push(\n        <tr key={u.id}>\n          <td>{u.id}</td>\n          <td>{u.name}</td>\n          <td>{u.age}</td>\n          <td>{u.jobs.company}</td>\n          <td>{u.jobs.duration}</td>\n        </tr>,\n      );\n    });\n    return list;\n  }\n  if (!data.user && !data.users) {\n    return (\n      <tr>\n        <td colSpan=\"5\">No user found for this ID </td>\n      </tr>\n    );\n  }\n}\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}